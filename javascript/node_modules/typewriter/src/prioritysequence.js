var PrioritySequence,Sequence,assert;assert=require("assert");Sequence=require("./sequence");PrioritySequence=function(){function e(e){this.onWait=e;this._sequences=[];this._waiting=true;if(typeof this.onWait==="function"){this.onWait()}}e.prototype._next=function(){var e,t,i,n,s;s=null;i=this._sequences;for(e=0,t=i.length;e<t;e++){n=i[e];if(n!=null){if(n.empty()){continue}s=n;break}}if(s!=null){return s.next(this._next.bind(this))}else{this._sequences=[];this._waiting=true;return typeof this.onWait==="function"?this.onWait():void 0}};e.prototype.then=function(e,t){assert.ok(e!=null,"The priority must be specified");assert.strictEqual(typeof e,"number","Priority must be a number");assert.strictEqual(~~e,e,"Priority must be an integer");assert.ok(e>=0,"Priority must be a positive integer");assert.ok(t!=null,"The function must be specified");if(this._sequences[e]==null){this._sequences[e]=new Sequence}this._sequences[e].add(t);if(this._waiting){this._waiting=false;return this._next()}};return e}();module.exports=PrioritySequence;