var Sequence,assert,asyncCallsCount,sequence;assert=require("assert");Sequence=require(__dirname+"/../src/sequence");sequence=null;asyncCallsCount=0;describe("Sequence",function(){return it("Should create an instance of Sequence",function(){sequence=new Sequence;return assert.ok(sequence instanceof Sequence)})});describe("Sequence#add",function(){it("Should throw an exception when no function is specified",function(){return assert.throws(function(){return sequence.add()},/The function must be specified/)});return it("Should queue an asynchronous function",function(){var e;e=function(e){return setTimeout(function(){asyncCallsCount++;return typeof e==="function"?e():void 0},1e3)};assert.doesNotThrow(function(){sequence.add(e);return sequence.add(e)});assert.ok(sequence._queue.length===2);assert.strictEqual(sequence._queue[0],e);return assert.strictEqual(sequence._queue[1],e)})});describe("Sequence#next",function(){it("Should call the next function in queue",function(e){this.timeout(0);return sequence.next(function(){assert.strictEqual(asyncCallsCount,1);assert.strictEqual(sequence._queue.length,1);return sequence.next(function(){assert.strictEqual(asyncCallsCount,2);assert.strictEqual(sequence._queue.length,0);return e()})})});return it("Should check if queue is empty",function(){return assert.strictEqual(sequence.empty(),true)})});